public class combination{
    /**
     * 
     * @param a number of boxes of type A
     * @param b number of boxes of type C
     * @param c number of boxes of type B
     * @return The total amount of space used 
     */
     public static int function(int a,int b,int c){
        int f=16*a+24*b+27*c;
        return f;
 }
 /** 
  * @param target a target value(usualy the totall amount of space which is 1320)
  * @return all the possible combination of A B C that sum to the target 
  */
     public static int[][] combi(int target){
         int count=0;
         
        for(int i=0;i<target;i++){
            for(int j=0;j<target;j++){
                for(int k=0;k<target;k++){
                    if(function(i,j,k)>target)
                        break;
                    if(function(i,j,k)==target){
                        count++;
                    } 
                }
            }
        }
        int[][] all= new int[count][3];
        int p=0;
        for(int i=0;i<target;i++){
            for(int j=0;j<target;j++){
                for(int k=0;k<target;k++){
                    if(function(i,j,k)>target)
                        break;
                    if(function(i,j,k)==target){
                        all[p]=new int[] {i,j,k};
                        p++;
                    } 
                }
            }
        }
        System.out.println("Total number of combination is "+count);
        return all;
     }
     /**
      * 
      * @param combinat array with 3 integer that represent [# of A,# of B,# of C]
      * @return the profit generated by this combination
      */
     public static int profit(int[] combinat){
         int result= 3*combinat[0]+4*combinat[1]+5*combinat[2];
         return result;
     }
     /**
      * 
      * @param all all posible combination of A,B and C 
      * @return which combination has the maximum profit
      */
     public static int[] best_profit(int[][] all){
         int max=0;
         int position=0;
         for(int i =0;i<all.length;i++){
            if(profit(all[i])>max){
                max=profit(all[i]);
                position=i;
            }
         }
         return all[position];
     }
     public static void main(String args[]) {
        int[][] a=combi(1320);
        int[] b =best_profit(a);
        System.out.print("The best combination is: [");
        for(int i=0;i<b.length;i++){
            System.out.print(b[i]+" ");
        }
        System.out.println("]");
        System.out.println("With a profit of: "+profit(b));
        
      
     }
}